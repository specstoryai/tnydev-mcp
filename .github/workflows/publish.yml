name: Publish to npm

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.1)'
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test --if-present
      
      - name: Build
        run: npm run build
      
      - name: Create .npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Update version (if manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
          git tag v${{ github.event.inputs.version }}
          git push origin main --tags
      
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Install extension dependencies
        run: npm install archiver @types/archiver
      
      - name: Build Desktop Extension
        run: npm run extension:build
      
      - name: Upload Extension as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: desktop-extension
          path: tnydev-mcp.dxt
      
      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            tnydev-mcp.dxt
          body: |
            ## üéâ Release ${{ github.ref_name }}
            
            ### Installation Options
            
            #### üñ•Ô∏è Claude Desktop Extension
            Download `tnydev-mcp.dxt` and drag it into Claude Desktop
            
            #### üì¶ npm Package
            ```bash
            npm install -g @specstory/tnydev-mcp
            # or use directly with
            npx @specstory/tnydev-mcp
            ```
            
            ### What's New
            See [CHANGELOG.md](https://github.com/specstoryai/tnydev-mcp/blob/main/CHANGELOG.md) for details.